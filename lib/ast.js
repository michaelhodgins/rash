// Generated by CoffeeScript 1.8.0

/*
Represents the root of the CSS AST.
 */
var Literal, Property, Rule, StyleSheet, ValueList;

StyleSheet = (function() {
  function StyleSheet(rules) {
    this.rules = rules;
  }

  StyleSheet.prototype.toCSS = function() {
    return this.rules.map(function(rule) {
      return rule.toCSS();
    }).join("\n");
  };

  StyleSheet.prototype.rash = function() {
    return this;
  };

  return StyleSheet;

})();


/*
Represents a single CSS rule, consisting on a selector and one or more properties.
 */

Rule = (function() {
  function Rule(selector, properties) {
    this.selector = selector;
    this.properties = properties;
  }

  Rule.prototype.toCSS = function() {
    var properties;
    properties = this.properties.map(function(property) {
      return property.toCSS();
    }).join(";");
    return "" + this.selector + " {" + properties + "}";
  };

  return Rule;

})();


/*
Represents a single CSS property, consisting of a style name, and one or more values.
 */

Property = (function() {
  function Property(name, values) {
    this.name = name;
    this.values = values;
  }

  Property.prototype.toCSS = function() {
    var values;
    if (this.values instanceof Array) {
      values = this.values.map(function(value) {
        return value.toCSS();
      }).join(" ");
      "" + this.name + ": " + values;
    } else {
      values = this.values.toCSS();
    }
    return "" + this.name + ": " + values;
  };

  return Property;

})();


/*
Represents a comma separated list of values.
 */

ValueList = (function() {
  function ValueList(values) {
    this.values = values;
  }

  ValueList.prototype.toCSS = function() {
    return this.values.map(function(value) {
      return value.toCSS();
    }).join(',');
  };

  return ValueList;

})();


/*
Represents a literal value.
 */

Literal = (function() {
  function Literal(value) {
    this.value = value;
  }

  Literal.prototype.toCSS = function() {
    return this.value;
  };

  return Literal;

})();

exports.StyleSheet = StyleSheet;

exports.Rule = Rule;

exports.Property = Property;

exports.Literal = Literal;

exports.ValueList = ValueList;
